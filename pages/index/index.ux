<template>
	<div onswipe="move" class="bg">
		<!--背景+按钮-->
		<div class="bg" if="{{dark}}">
			<img src="/common/Dark.png" class="bg" if="{{!fuckrgb}}"/>
			<img src="/common/bg_B.png" class="bg" else/>
			<img style="left: 6px;top: 402px;" src="/common/Reset_B.png" @click="new_game" />
			<img style="position: absolute;left: 258px;top: 402px;" src="/common/Undo_B.png" @click="chcb" />
			<img style="position: absolute;left: 258px;top: 6px;" src="/common/Info_B.png" @click="openMenu()"/>
			<img style="position: absolute;left: 6px;top: 6px;" src="/common/Back_B_rgb.png" @click="exit('e')"/>
			<!-- 时间 -->
			<text class="score" style="font-size: 20px;top: 12px;">{{time}}</text>
			<!--积分版-->
			<text class="score">{{ sco }}</text>
		</div>
		<div class="bg" else>
			<img src="/common/Light.png" class="bg"/>
			<img style="left: 6px;top: 402px;" src="/common/Reset.png" @click="new_game" />
			<img style="position: absolute;left: 258px;top: 402px;" src="/common/Undo.png" @click="chcb" />
			<img style="position: absolute;left: 258px;top: 6px;" src="/common/Info.png" @click="openMenu()"/>
			<img style="position: absolute;left: 6px;top: 6px;" src="/common/Back.png" @click="exit('e')"/>
			<!-- 时间 -->
			<text class="score" style="font-size: 20px;top: 12px;color: rgba(0, 0, 0, 0.4);">{{time}}</text>
			<!--积分版-->
			<text class="score" style="color: rgba(0, 0, 0, 0.4);">{{ sco }}</text>
		</div>
		<!--中间-->
		<div style="position: absolute;left: 14px;top: 86px;width: 308px;height: 308px;padding-top: 8px;padding-left:8px;display: flex;flex-wrap: wrap;" >
			<text class="square" for="{{blocks}}" style="background-color: {{bgc[md[$idx]]}};border: {{(!!md[$idx])*3}}px;font-size: {{md[$idx]>2047?16:32}}px;"tid={{$idx}} id={{$idx}}  if="{{!dark}}">
				{{ md[$idx] }}
			</text>
			<text class="square" for="{{blocks}}" style="color: {{bgc[md[$idx]]}};background-color: {{md[$idx]?'rgba(0, 0, 0, 0.36)':'#00000000'}};border: {{(!!md[$idx])*3}}px;font-size: {{md[$idx]>2047?16:32}}px;"tid={{$idx}} id={{$idx}} else >
				{{ md[$idx] }} 
			</text>
		</div>
		
		<!--about-->
		<div class="bg" show="{{menuFlag}}" style="background-color:rgba(0,0,0,0)">
		<div class="bg" id="about" onclick="open1()">
			<img src="/common/about.png"/>
			<!-- 时间 -->
			<text class="score" style="font-size: 20px;top: 12px;">{{time}}</text>
			<text style="position: absolute;left: 12px;top: 288px;width: 318px;height: 42px;font-size: 32px;text-align: left;color: #FFFFFF;">{{hsc}}</text>
			<img style="position: absolute;left: 258px;top: 6px;" src="/common/DarkMode.png" @click="changeMode()" if="{{dark}}"/>
			<img style="position: absolute;left: 258px;top: 6px;" src="/common/LightMode.png" @click="changeMode()"else/>
			<img style="position: absolute;left: 6px;top: 6px;" src="/common/Back_B.png" @click="exit('e')"/>
		</div></div>
		<!--back-->
		
	</div>
</template>

<style>
text{
	font-weight: bold;
	text-align: center;
}
.score {
	position: absolute;
	left: 78px;
	top: 441px;
	width: 180px;
	height: 32px;
	font-size: 24px;
	text-align: center;
	color: rgba(255, 255, 255, 0.6);
}
.square {
	width: 68px;
	height: 68px;
	margin-top: 4px;
	margin-left: 4px;
	border-radius: 20px;
	color: #59503f;
	border:0px solid rgba(255, 255, 255, 0.06);
}
.bg{
  position: absolute;
  width: 336px;
  height: 480px;
  background-color: black;
}
</style>

<script>
import prompt from "@system.prompt";
import storage from "@system.storage";
import folme from '@system.folme'
import router from "@system.router"
let icanuse=false
try{
	icanuse=typeof folme.to=="function"
}catch{
	icanuse=false
}

let sc = 0,
	ls,
	lhs,
	board = Array(4),
	added = Array(4),
	over = 0,
	lm =Array(4),
	that,
	src,srct;
for (let i = 0; i < 4; i++) {lm[i]=new Array(4);board[i]=new Array(4);added[i]=new Array(4)}
export default {
	public: {
		blocks:Array(16),
		md: [],
		hsc: 0,
		sco: sc,
		bgc: {},
		ch:0,
		menuFlag:false,
		dark:true,ani:false,fuckrgb:false,//设置项
		time:"00:00",
		settingl:192*icanuse
	},
	onInit() {
		storage.get({
			key: "dark",
			success: (data) => {
				this.dark=data!="light"
				this.fuckrgb=data=="fuck"
			}
		});
		that = this;
		//时间
		const now=new Date()
		this.time=`${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`
		setTimeout(()=>setInterval(()=>{
			const now=new Date()
			this.time=`${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`
		},1000),1000 -Date.now()%1000)
		//颜色
		let tempc =
			"rgba(0,0,0,0) #EFE5DA #F0E0C9 #fcb477 #ff9c61 #ff865d #ff6a38 #ebcf71 #ebcc5f #ebc94f #ebc53f #ebc22c #F2B6B6 #E8ED51 #FFE3FB #E8FF8C #FFDEC9 #F5A433 #E6109B #96C4E6 #E560CD".split(
				" "
			);
		tempc.forEach((a, index) => {
			this.bgc[2 ** index] = a;
		});
		this.bgc[""] = "#00000000";
		storage.get({
			key: "score",
			success: (data) => {
				if (data) {
					let o = JSON.parse(data);
					board=o.map
					rm0(o.map);
					this.hsc = o.hs;
					this.sco=o.sc
					this.ch = 0;
					this.ani=o.ani
				//console.log(data)
				} else this.new_game();
				
			}
		});
		clear(added)
	},onShow(){
		if(icanuse&&!this.menuFlag)folme.setTo({id:"about",toState:{translateX:"336px"}});
	},
	chcb() {
		if (this.ch ==1) {
			this.hsc = lhs;
			this.sco = ls;
			for (let i = 0; i <4; i++) {
				for (let j = 0; j < 4; j++) {
					board[i][j]=lm[i][j]
				}
			}
			rm0(board);
			over=0;
			this.save();
			this.ch = 0;
		}else{
			prompt.showToast({
        		message: "不能再撤啦",
        		duration: 1000
      		});
		}
	},
	new_game() {
		backup()
		newgame();
		this.sco = 0;
		this.save();
		clearani()
	},
	move(eve) {
		if(this.menuFlag){
			if(eve.direction=="right")this.exit('e')
			return
		}
		//if(eve=="down")mo(eve);else
		mo(eve.direction);
		if (over) {
			prompt.showToast({
				message: "Gameover!",
				duration: 2000,
			});
		}
		if (this.sco > this.hsc) {
			this.hsc = this.sco;
		}
		this.save();
	},
	save() {
		let o = {
			map: board,
			hs: this.hsc,
			sc: this.sco,
			ani:this.ani
		};
		//o=""
		storage.set({
			key: "score",
			value: JSON.stringify(o)
		});
	},

	exit(a) {
  		if(a.direction=='right'||a=="e"){
			if(this.menuFlag){
				if(!icanuse){
					this.menuFlag =false;
					return
				}
				setTimeout(() => {this.menuFlag =false;}, 100);
				folme.to({id:"about",toState:{translateX:"336px"},config:{duration:0.1,ease:"out"}});
			}
			else this.$app.exit();
		}
	},

	openMenu() {//打开about
  		this.menuFlag =true;
		if(icanuse)folme.to({id:"about",toState:{translateX:"0px"},config:{duration:0.1,ease:"out"}});
	},

	changeMode(){
		this.dark=!this.dark;
		storage.set({
			key: "dark",
			value:this.dark?"dark":"light",
			success:()=>{this.fuckrgb=false}
		});
	},onBackPress(){
		this.exit('e')
		return true;
	},open1(){
		clearTimeout(srct)
		srct=setTimeout(()=>src=0,500)
		src++
		if(src>=5){
			router.push({uri:"pages/settings",params:{ani:icanuse}})
			src=0
		}
	}
};
function rm0(sm) {
	let a=0;
	for (let i = 0; i < 4; i++) {
		for (let b = 0; 4 > b; b++) 
		{
			if (sm[i][b] == 0) {
				that.md[a]=""
			} else {that.md[a]=sm[i][b]}
			a++
		}}
	return
}
function clear(m){//清空数组
	for (let i = 0; i < 4; i++) {m[i].fill(0)}
}
function newgame() {
	 (over = 0);
	clear(board)
	newblock();
	newblock();
	rm0(board);
}
function rand_num(){//生成随机数，为了适配8的代码
	return Math.floor(Math.random()*1000)
}
function newblock() {//生成新方块
	for (let a = 3, b = rand_num() % 4, c = rand_num() % 4, d = 50 < rand_num() % 100 ? 4 : 2; 0 < a;) {
		if (0 == board[b][c]) return board[b][c] = d
		b = rand_num() % 4;
		c = rand_num() % 4;
		a--
	}
	for (a = 0; 4 > a; a++)
		for (b = 0; 4 > b; b++)
			if (0 == board[a][b]) return board[a][b] = 2
}
function mo(dir) {//移动函数2
	let up = canMoveUp(board),
		down = canMoveDown(board),
		right = canMoveRight(board),
		left = canMoveLeft(board);
	if (up || left || down || right) {
		if(eval(dir)){
			backup()
			eval("move"+dir+"()");
			clear(added)
			if(that.ani){
				setTimeout(() => {clearani()}, 120);
				setTimeout(() => {newblock();
				rm0(board);
				}, 110);
			}else{
				newblock();
				rm0(board);
			}
		}
		return
	} 
	over = 1;
	rm0(board);return
}
function backup(){//使能够撤回
	for (let i = 0; i <4; i++) {
		for (let j = 0; j < 4; j++) {
			lm[i][j]=board[i][j]
		}
	}
	ls = that.sco
	lhs = that.hsc
	that.ch=1
	return
}
function fromTo(id1,id2){//动画函数，让id1的物品移动到id2
	if(that.ani){
		id1=id1.toString()
		id2=id2.toString()
		let x1,y1,x2,y2;
		that.$element(id1).getBoundingClientRect({
			success: (data)=>{
				let { top, bottom, left, right, width, height } = data;
				x1=left;y1=top
		}})
		that.$element(id2).getBoundingClientRect({
			success: (data)=>{
				let { top, bottom, left, right, width, height } = data;
				x2=left;y2=top
		}})
		x2-=x1;y2-=y1
		folme.fromTo({id:id1,fromState:{translateY:"0px",translateX:"0px"},toState:{translateY:y2+"px",translateX:x2+"px"},config:{duration:0.1}});
	}
	return 0
}
function clearani(){//清除动画
	for (let i = 0; i < 16; i++) {
		let id=i.toString()
		folme.cancel({id:id})
		folme.setTo({id:id,toState:{translateY:"0px",translateX:"0px"}})
	}
}
function moveleft() {
	for (let a = 0; 4 > a; a++)
		for (let b = 1; 4 > b; b++)
			if (0 != board[a][b])
				for (let c = 0; c < b; c++) {
					if(0 == board[a][c] && noBlockHorizontal(a, c, b, board)){
						board[a][c] = board[a][b], board[a][b] = 0;
						fromTo(a*4+b,a*4+c)
						break
					}
					else board[a][c] == board[a][b] && noBlockHorizontal(a, c, b, board) && (0 != added[a][c] ? (board[a][c + 1] = board[a][b], board[a][b] = 0,fromTo(a*4+b,a*4+c+1)) : (board[a][c] += board[a][b],that.sco+=board[a][b]*2, board[a][b] = 0, added[a][c] = 1,fromTo(a*4+b,a*4+c)));}
	
	
	return !0
}

function moveright() {
	for (let a = 0; 4 > a; a++)
		for (let b = 2; 0 <= b; b--)
			if (0 != board[a][b])
				for (let c = 3; c > b; c--)
					if(0 == board[a][c] && noBlockHorizontal(a, b, c, board)){board[a][c] = board[a][b], board[a][b] = 0;fromTo(a*4+b,a*4+c);break}
					else board[a][c] == board[a][b] && noBlockHorizontal(a, b, c, board) && (0 != added[a][c] ? (board[a][c - 1] = board[a][b], board[a][b] = 0,fromTo(a*4+b,a*4+c-1)) : (board[a][c] += board[a][b],that.sco+=board[a][b]*2, board[a][b] = 0, added[a][c] = 1,fromTo(a*4+b,a*4+c)));
	
	
	return !0
}

function moveup() {
	for (let a = 0; 4 > a; a++)
		for (let b = 1; 4 > b; b++)
			if (0 != board[b][a])
				for (let c = 0; c < b; c++){
					if(0 == board[c][a] && noBlockVertical(a, c, b, board)){board[c][a] = board[b][a], board[b][a] = 0;fromTo(b*4+a,c*4+a);break}
					else board[c][a] == board[b][a] && noBlockVertical(a, c, b, board) && (0 != added[c][a] ? (board[c + 1][a] = board[b][a], board[b][a] = 0,fromTo(b*4+a,(c+1)*4+a)) : (board[c][a] += board[b][a],that.sco+=board[c][a], board[b][a] = 0, added[c][a] = 1,fromTo(b*4+a,c*4+a)));}
}
function movedown() {
	for (let a = 0; 4 > a; a++)
		for (let b = 2; 0 <= b; b--)
			if (0 != board[b][a])
				for (let c = 3; c > b; c--){if(0 == board[c][a] && noBlockVertical(a, b, c, board)){board[c][a] = board[b][a], board[b][a] = 0;fromTo(b*4+a,c*4+a);break}else board[c][a] == board[b][a] && noBlockVertical(a, b, c, board) && (0 != added[c][a] ? (board[c - 1][a] = board[b][a], board[b][a] = 0,fromTo(b*4+a,(c-1)*4+a)) : (board[c][a] += board[b][a],that.sco+=board[c][a], board[b][a] = 0, added[c][a] = 1,fromTo(b*4+a,c*4+a)));}
}
function canMoveLeft(a) {
	for (let b = 0; 4 > b; b++)
		for (let c = 0; 4 > c; c++)
			if (0 != a[b][c] && 0 != c && (0 == a[b][c - 1] || a[b][c - 1] == a[b][c])) return !0;
	return !1
}

function canMoveRight(a) {
	for (let b = 0; 4 > b; b++)
		for (let c = 0; 4 > c; c++)
			if (0 != a[b][c] && 3 != c && (0 == a[b][c + 1] || a[b][c + 1] == a[b][c])) return !0;
	return !1
}

function canMoveUp(a) {
	for (let b = 0; 4 > b; b++)
		for (let c = 0; 4 > c; c++)
			if (0 != a[b][c] && 0 != b && (0 == a[b - 1][c] || a[b - 1][c] == a[b][c])) return !0;
	return !1
}

function canMoveDown(a) {
	for (let b = 0; 4 > b; b++)
		for (let c = 0; 4 > c; c++)
			if (0 != a[b][c] && 3 != b && (0 == a[b + 1][c] || a[b + 1][c] == a[b][c])) return !0;
	return !1
}

function noBlockHorizontal(a, b, c, d) {
	for (b += 1; b < c; b++)
		if (0 != d[a][b]) return !1;
	return !0
}

function noBlockVertical(a, b, c, d) {
	for (b += 1; b < c; b++)
		if (0 != d[b][a]) return !1;
	return !0
}

</script>